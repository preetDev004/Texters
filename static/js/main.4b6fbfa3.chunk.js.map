{"version":3,"sources":["Components/Alert.jsx","Components/Navbar.jsx","Components/Text.jsx","Components/About.jsx","Components/Footer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","type","msg","Navbar","Fragment","style","fontSize","concat","mode","id","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","abouttext","htmlFor","onClick","toggleMode","Text","_useState","useState","_useState2","Object","slicedToArray","text","setText","WordCount","arr","split","forEach","element","index","indexOf","splice","length","i","FontChanger","preEl","document","getElementById","styles","fontFamily","headding","onChange","event","target","value","placeholder","rows","showAlert","space","join","toFixed","About","aria-labelledby","data-bs-parent","Footer","ProTypes","PropTypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","setAlert","body","backgroundColor","color","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,EAAMC,GAK1B,OACQA,EAAMC,OAASC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDAAkDC,KAAK,SACrFJ,EAAAC,EAAAC,cAAA,cANU,SAACG,GACf,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAItCC,CAAWb,EAAMC,MAAMa,OADjB,MACoCd,EAAMC,MAAMc,yBCN5D,SAASC,EAAOhB,GAC7B,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAACC,SAAU,QAASd,UAAS,kCAAAe,OAAmD,YAAfpB,EAAMqB,KAAqB,OAAS,QAAxE,UAAAD,OAAsG,YAAdpB,EAAMqB,KAAoB,QAAU,OAA5H,QAAAD,OAAuJ,YAAdpB,EAAMqB,KAAoB,UAAY,SAAWC,GAAG,UACpOpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAekB,KAAK,KAAKvB,EAAMwB,OAC5CtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBS,KAAK,SAASW,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1L3B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BiB,GAAG,0BAC3CpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkByB,eAAa,OAAOP,KAAK,KAAxD,SAEFrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWkB,KAAK,KAAKvB,EAAM+B,aAG5C7B,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAe,OAAgD,YAAfpB,EAAMqB,KAAqB,QAAU,OAAtE,UACZnB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwB2B,QAAQ,0BAAjD,eACA9B,EAAAC,EAAAC,cAAA,SAAO6B,QAASjC,EAAMkC,WAAY7B,UAAU,mBAAmBS,KAAK,WAAYQ,GAAG,gCCrBlF,SAASa,EAAKnC,GAAO,IAAAoC,EACTC,mBAAS,IADAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1BK,EAD0BH,EAAA,GACpBI,EADoBJ,EAAA,GAsB1BK,EAAW,WACb,IAAIC,EAAMH,EAAKI,MAAM,QAQrB,OAPAD,EAAIE,QAAQ,SAAAC,GACR,IAAIC,EAAQJ,EAAIK,QAAQF,GACV,KAAVA,GACAH,EAAIM,OAAOF,EAAO,KAInBJ,EAAIO,QAEXC,EAAI,EACFC,EAAc,WAChB,IAAMC,EAAQC,SAASC,eAAe,WAChCC,EAAS,CAAC,iBAAiB,WAAW,aAAa,eAAe,SAAS,iBAAiB,WAAW,WACzGL,EAAE,GACFE,EAAMpC,MAAMwC,WAAWD,EAAOL,GAC9BA,KAES,IAAJA,IACLA,EAAE,EACFE,EAAMpC,MAAMwC,WAAWD,EAAOL,GAC9BA,MAGR,OACIlD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACAf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,UAAKJ,EAAM2D,UACXzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YAAWwD,SAlDF,SAACC,GAClBnB,EAAQmB,EAAMC,OAAOC,QAiDsBA,MAAOtB,EAAMpC,UAAS,mBAAAe,OAAkC,YAAbpB,EAAMqB,KAAiB,OAAO,QAAnD,UAAAD,OAAgF,YAAbpB,EAAMqB,KAAiB,QAAQ,SAAWC,GAAG,8BAA8B0C,YAAY,cAAcC,KAAK,OAE1O/D,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAe,OAA0B,YAAbpB,EAAMqB,KAAiB,UAAU,OAA9C,UAA8DY,QAjDrE,WACXS,EAAQD,EAAK9B,eACbX,EAAMkE,UAAU,sDAAsD,aA+ClE,gBACAhE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAe,OAA0B,YAAbpB,EAAMqB,KAAiB,UAAU,OAA9C,UAA8DY,QA9CpE,WACZS,EAAQD,EAAKhC,eACbT,EAAMkE,UAAU,sDAAsD,aA4ClE,gBACAhE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAe,OAA0B,YAAbpB,EAAMqB,KAAiB,UAAU,OAA9C,UAA8DY,QAvChE,WAChB,IAAIkC,EAAQ1B,EAAKI,MAAM,QACvBH,EAAQyB,EAAMC,KAAK,MACnBpE,EAAMkE,UAAU,+CAA+C,aAoC3D,uBACAhE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAe,OAA0B,YAAbpB,EAAMqB,KAAiB,UAAU,OAA9C,eAAmEY,QA5CxE,WACbS,EAAQ,IACR1C,EAAMkE,UAAU,gCAAgC,aA0C5C,WAEJhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,cAAM,IAAN,IAAWF,EAAAC,EAAAC,cAAA,cAASuC,IAAT,WAAX,MAAmDzC,EAAAC,EAAAC,cAAA,kBAAUqC,EAAKU,OAAf,gBACnDjD,EAAAC,EAAAC,cAAA,cAAM,IAAN,sCAA6CF,EAAAC,EAAAC,cAAA,eAAU,KAAQuC,KAAa0B,QAAQ,GAAvC,cAEjDnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAGkB,GAAG,UAAUJ,MAAO,CAACwC,WAAa,CAACL,iBAAtC,oBAA+EZ,GAC/EvC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,qBAAAe,OAAoC,YAAbpB,EAAMqB,KAAiB,UAAU,OAAxD,UAAwEY,QAASoB,GAA/F,eAA6HnD,EAAAC,EAAAC,cAAA,aCnE1H,SAASkE,EAAMtE,GAC1B,OACIE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACAf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaiB,GAAG,oBAC3BpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,qBAAAe,OAAoC,YAAbpB,EAAMqB,KAAiB,OAAO,QAArD,UAAAD,OAAkF,YAAbpB,EAAMqB,KAAiB,QAAQ,UAC9GnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBiB,GAAG,cAChCpB,EAAAC,EAAAC,cAAA,UAAQC,UAAS,uBAAAe,OAAsC,YAAbpB,EAAMqB,KAAiB,UAAU,OAA1D,UAAAD,QAAyEpB,EAAMqB,KAAiB,UAAmBP,KAAK,SAASW,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,OAAOD,gBAAc,eAA7O,mCAIJzB,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,cAAcjB,UAAU,mCAAmCkE,kBAAgB,aAAaC,iBAAe,qBAC3GtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gDAAH,KAAuDF,EAAAC,EAAAC,cAAA,iEAAgEF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,0CAAR,kBAA9E,iDAA6MrB,EAAAC,EAAAC,cAAA,yBAA7M,sBACvDF,EAAAC,EAAAC,cAAA,wLAAuLF,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,0CAAR,qCAAtM,WCfb,SAASkD,EAAOzE,GAC3B,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAS,gCAAAe,OAAiD,YAAfpB,EAAMqB,KAAqB,UAAY,QAAzE,UAAAD,OAAwG,YAAfpB,EAAMqB,KAAqB,QAAU,UAC3InB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,wBAEIH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBkB,KAAK,KAAvC,kBHuBpBP,EAAO0D,SAAW,CAChBlD,MAAOmD,IAAUC,OAAOC,WACxB9C,UAAW4C,IAAUC,OAAOC,YAE9B7D,EAAO8D,aAAe,CACpBtD,MAAO,aACPO,UAAW,SIoBEgD,MA5Cf,WAAe,IAAA3C,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNf,EADMiB,EAAA,GACA0C,EADA1C,EAAA,GAAA2C,EAEa5C,mBAAS,MAFtB6C,EAAA3C,OAAAC,EAAA,EAAAD,CAAA0C,EAAA,GAENhF,EAFMiF,EAAA,GAECC,EAFDD,EAAA,GA0Bb,OACEhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACCf,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACY,EAAD,CAAQK,KAAMA,EAAMa,WAjBP,WACJ,UAATb,GACF2D,EAAQ,WACRzB,SAAS6B,KAAKlE,MAAMmE,gBAAkB,UACtC9B,SAAS6B,KAAKlE,MAAMoE,MAAQ,UAI5BN,EAAQ,SACRzB,SAAS6B,KAAKlE,MAAMmE,gBAAkB,QACtC9B,SAAS6B,KAAKlE,MAAMoE,MAAQ,UAOkB9D,MAAM,UAAUO,UAAU,aACtE7B,EAAAC,EAAAC,cAACL,EAAD,CAAOE,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC+B,EAAD,CAAMd,KAAMA,EAAM6C,UA7BR,SAACqB,EAASzE,GAC1BqE,EAAS,CACPpE,IAAKwE,EACLzE,KAAMA,IAER0E,WAAW,WACTL,EAAS,OACR,OAsB2CxB,SAAS,sBAEnDzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACkE,EAAD,CAAOjD,KAAMA,KAEfnB,EAAAC,EAAAC,cAACqE,EAAD,CAAQpD,KAAMA,OCtCPoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWhD,SAASC,eAAe,SACpDgD,OACHtG,EAAAC,EAAAC,cAACF,EAAAC,EAAMsG,WAAP,KACEvG,EAAAC,EAAAC,cAACsG,EAAD,QAOJjB","file":"static/js/main.4b6fbfa3.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize =(word)=>{\n        const lower = word.toLowerCase()\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\n    }\n    return (\n            props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n               </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav style={{fontSize :'15px'}} className={`navbar navbar-expand-lg navbar-${props.mode === 'success' ? 'dark' : 'light'} text-${props.mode=== 'success' ? 'light' : 'dark'} bg-${props.mode=== 'success' ? 'success' : 'light'}`} id='navbar'>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">{props.abouttext}</a>\n              </li>\n            </ul>\n            <div className={`form-check form-switch text-${props.mode === 'success' ? 'light' : 'dark'} my-2`}>\n              <label className=\"form-check-label mx-2\" htmlFor=\"flexSwitchCheckDefault\">Toggle mode</label>\n              <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  )\n}\nNavbar.ProTypes = {\n  title: PropTypes.string.isRequired,\n  abouttext: PropTypes.string.isRequired\n}\nNavbar.defaultProps = {\n  title: 'title here',\n  abouttext: 'about'\n}\n","import React, { useState } from 'react'\n\nexport default function Text(props) {\n    const[text, setText] = useState('')\n    const HandleChange = (event)=>{\n        setText(event.target.value)\n    }\n    const upClick =()=>{\n        setText(text.toUpperCase())\n        props.showAlert(\"Your text is converted into Uppercase Successfully.\",\"success\")\n    }\n    const lowClick =()=>{\n        setText(text.toLowerCase())\n        props.showAlert(\"Your text is converted into Lowercase Successfully.\",\"success\")\n    }\n    const DeleteAll =()=>{\n        setText('')\n        props.showAlert(\"Text is Deleted Successfully.\",\"success\")\n    }\n    const RemoveSpaces =()=>{\n        let space = text.split(/[ ]+/)\n        setText(space.join(\" \"))\n        props.showAlert(\"Extra spaces have been removed Successfully.\",\"success\")\n    }\n    const WordCount =()=>{\n        let arr = text.split(/[ ]+/)\n        arr.forEach(element => {\n            let index = arr.indexOf(element)\n            if (element==='') {\n                arr.splice(index ,1)\n            }\n        });\n\n        return arr.length\n    }\n    var i = 0\n    const FontChanger = ()=>{\n        const preEl = document.getElementById('preview')\n        const styles = ['Abyssinica SIL','Alkalami','Bebas Neue','Indie Flower','Neucha','Noto Sans Mono','Playball','cursive']\n        if (i<8) {\n            preEl.style.fontFamily=styles[i]\n            i++\n        }\n        else if (i===8) {\n            i=0\n            preEl.style.fontFamily=styles[i]\n            i++\n        }\n    }\n    return (\n        <>\n        <div className='container my-3'>\n            <h3>{props.headding}</h3>\n            <div className=\"mb-3 my-1\">\n                <textarea  onChange={HandleChange} value={text} className={`form-control bg-${props.mode==='success'?'dark':'light'} text-${props.mode==='success'?'white':'black'}`} id=\"exampleFormControlTextarea1\" placeholder='Enter here!' rows=\"8\"></textarea>\n            </div>\n            <div className={`btn btn-${props.mode==='success'?'success':'dark'} mx-1 `} onClick={upClick}>Go Uppercase</div>\n            <div className={`btn btn-${props.mode==='success'?'success':'dark'} mx-1 `} onClick={lowClick}>Go Lowercase</div>\n            <div className={`btn btn-${props.mode==='success'?'success':'dark'} mx-1 `} onClick={RemoveSpaces} >Remove Extra Spaces</div>\n            <div className={`btn btn-${props.mode==='success'?'success':'dark'} mx-1 my-1 `} onClick={DeleteAll}>Delete</div>\n        </div>\n        <div className='container my-2'>\n            <p>--{'>'} <strong>{WordCount()} Words </strong>and<strong> {text.length} characters</strong></p>\n            <p>--{'>'} You can read this text in atleast <strong>{(0.009 * WordCount()).toFixed(2)} Minutes</strong></p>\n        </div>\n        <hr />\n        <div className=\"container my-1\">\n            <h3>Preview :</h3>\n            <p id='preview' style={{fontFamily : {FontChanger}}}>&nbsp;&nbsp;&nbsp;&nbsp; {text}</p>\n            <div className={`container btn btn-${props.mode==='success'?'success':'dark'} my-1 `} onClick={FontChanger}>Change Font</div><hr />\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function About(props) {\n    return (\n        <>\n        <h3 className='mx-3 my-2'>About us</h3>\n        <div className='container my-3'>\n            <div className=\"accordion \" id=\"accordionExample\">\n                <div className={`accordion-item bg-${props.mode==='success'?'dark':'light'} text-${props.mode==='success'?'white':'black'}`}>\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                        <button className={`accordion-button bg-${props.mode==='success'?'success':'dark'} text-${props.mode==='success'?'white':'white'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            This is Web-app of Texters....\n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\">\n                            <p><strong>A Text-utility from \"Texters\".</strong> </p><p>&nbsp;&nbsp;&nbsp;&nbsp;This text-utility web-app is made by <strong><code><a href=\"https://www.instagram.com/_preet_7274/\">@_preet_7274</a></code></strong> with the help of JavaScript framework called <strong>ReactJs</strong> single handedly. </p>\n                            <p>&nbsp;&nbsp;&nbsp;&nbsp; Even you can cntribute in this web-app by just giving your ideas of imrovements or by submiting your own custom Components made in ReactJs on the E-mail : <strong> <code><a href=\"mailto:preetpatelofficial004@gmail.com\">preetpatelofficial004@gmail.com</a></code></strong> </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Footer(props) {\n    return (\n        <div>\n            <footer className={`text-center text-lg-start bg-${props.mode === 'success' ? 'success' : 'light'} text-${props.mode === 'success' ? 'light' : 'muted'}`} >  \n                <div className=\"text-center p-4 \">\n                    © 2022 Copyright :\n                    <a className=\"text-reset fw-bold\" href=\"/\">Texters.com</a>\n                </div>\n            </footer>\n        </div>\n    )\n}\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport Text from './Components/Text';\nimport About from './Components/About';\nimport React from 'react';\nimport Footer from './Components/Footer';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {   \n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1200);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('success')\n      document.body.style.backgroundColor = '#343a40'\n      document.body.style.color = 'white'\n\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n    }\n  }\n\n  return (\n    <>\n     <div>\n        <Navbar mode={mode} toggleMode={toggleMode} title='Texters' abouttext='About us' />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Text mode={mode} showAlert={showAlert} headding='Enter text below' />\n        </div>\n        <div className=\"container my-3\">\n          <About mode={mode}/>\n        </div>\n        <Footer mode={mode}/>\n     </div>\n       \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}